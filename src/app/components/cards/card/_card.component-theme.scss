@use 'sass:map';
@use '@angular/material' as mat;

@mixin styles($bg-color, $text-color, $outline-color) {
  &.app-card.card {
    color: $text-color;
    background-color: $bg-color;
    border-color: $outline-color;
  }

  &.app-card.card.outlined {
    color: $bg-color;
    background-color: transparent;
    border-color: $bg-color;
  }
}

@mixin level-palette-styles($palette, $level) {
  @include styles(
    mat.get-color-from-palette($palette, $level),
    mat.get-color-from-palette($palette, #{$level}-contrast),
    mat.get-color-from-palette($palette, ($level + 200)),
  );
  &-contrast {
    @include styles(
      mat.get-color-from-palette($palette, #{$level}-contrast),
      mat.get-color-from-palette($palette, ($level + 200)-contrast),
      mat.get-color-from-palette($palette, #{$level}-contrast),
    );
  }
}

@mixin palette-styles($palette) {
  @include level-palette-styles($palette, 500);
}

@mixin color($config) {
  $primary: map.get($config, primary);
  $accent: map.get($config, accent);
  $warn: map.get($config, warn);
  $background: map.get($config, background);
  $foreground: map.get($config, foreground);

  .blank {
    @include styles(
      mat.get-color-from-palette($background, card),
      mat.get-color-from-palette($foreground, text),
      mat.get-color-from-palette($foreground, divider),
    )
  }

  $levels: (50, 100, 200, 300, 400, 500, 600, 700, 800, 900);

  @each $level in $levels {
    .primary-#{$level} {
      @include level-palette-styles($primary, $level);
    }
    
    .accent-#{$level} {
      @include level-palette-styles($accent, $level);
    }

    .warn-#{$level} {
      @include level-palette-styles($warn, $level);
    }
  }

  .primary {
    @include palette-styles($primary);
  }
  
  .accent {
    @include palette-styles($accent);
  }

  .warn {
    @include palette-styles($warn);
  }
}

@mixin typography($config) {
  .app-card.card {
    font-family: mat.font-family($config);
  }
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($color-config);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($typography-config);
  }
}