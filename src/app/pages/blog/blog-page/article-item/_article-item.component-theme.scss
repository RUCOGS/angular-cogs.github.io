@use 'sass:map';
@use '@angular/material' as mat;

@-webkit-keyframes ani {
  from {
    -webkit-mask-position: 0 0;
    mask-position: 0 0;
  }

  to {
    -webkit-mask-position: 100% 0;
    mask-position: 100% 0;
  }
}

@keyframes ani {
  from {
    -webkit-mask-position: 0 0;
    mask-position: 0 0;
  }

  to {
    -webkit-mask-position: 100% 0;
    mask-position: 100% 0;
  }
}

@-webkit-keyframes ani2 {
  from {
    -webkit-mask-position: 100% 0;
    mask-position: 100% 0;
  }

  to {
    -webkit-mask-position: 0 0;
    mask-position: 0 0;
  }
}

@keyframes ani2 {
  from {
    -webkit-mask-position: 100% 0;
    mask-position: 100% 0;
  }

  to {
    -webkit-mask-position: 0 0;
    mask-position: 1.3% 0;
  }
}

@mixin styles($bg-color, $text-color, $outline-color) {
  &.app-article-item.card {
    color: $text-color;
    background-color: $bg-color;
    border-color: $outline-color;
  
    transition: transform .1s ease-out;

    &:hover {
      transform: scale(1.025);
    }

    &.fill {
      background: linear-gradient(to top, $bg-color 50%, transparent 50%);
      background-size: 100% 200%;
      background-position: right top;
      transition: 0.5s ease;
      
      &:hover {
        background-position: right bottom;
        transition: 0.5s ease;
        color: $text-color;
      }
    }
  }
}

@mixin level-palette-styles($palette, $level) {
  @include styles(
    mat.get-color-from-palette($palette, $level),
    mat.get-color-from-palette($palette, #{$level}-contrast),
    mat.get-color-from-palette($palette, ($level + 200)),
  );
  &-contrast {
    @include styles(
      mat.get-color-from-palette($palette, #{$level}-contrast),
      mat.get-color-from-palette($palette, $level),
      mat.get-color-from-palette($palette, #{$level}-contrast),
    );
  }
}

@mixin palette-styles($palette) {
  @include level-palette-styles($palette, 500);
}

@mixin color($config) {
  $primary: map.get($config, primary);
  $accent: map.get($config, accent);
  $warn: map.get($config, warn);
  $background: map.get($config, background);
  $foreground: map.get($config, foreground);

  .blank {
    @include styles(
      mat.get-color-from-palette($background, card),
      mat.get-color-from-palette($foreground, text),
      mat.get-color-from-palette($foreground, divider),
    )
  }
}

@mixin typography($config) {
  .app-article-item.card {
    font-family: mat.font-family($config);
  }
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($color-config);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($typography-config);
  }
}